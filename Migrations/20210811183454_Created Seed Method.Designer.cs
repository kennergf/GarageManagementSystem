// <auto-generated />
using System;
using GarageManagementSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GarageManagementSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210811183454_Created Seed Method")]
    partial class CreatedSeedMethod
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GarageManagementSystem.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "d42eb8c8-2232-406b-9bc0-3859863f064c",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "fdc684f7-ef90-4958-965c-4e6460f238d7",
                            Email = "admin@gms.ie",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "Admin",
                            NormalizedEmail = "ADMIN@GMS.IE",
                            NormalizedUserName = "ADMIN@GMS.IE",
                            PasswordHash = "AQAAAAEAACcQAAAAEMIIaQTSVD+P1Y8VpIvutWphRS1E1Ux1mBWr3Difwn3CSaCfpxYUrqBrcCE3esZUlg==",
                            PhoneNumber = "014569145",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "578df42e-b2a8-4286-8742-ad0592ab8e8a",
                            TwoFactorEnabled = false,
                            UserName = "admin@gms.ie"
                        },
                        new
                        {
                            Id = "160453a8-8e19-4f70-9b61-3f6f37d82a3a",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0e670975-babf-4417-9575-4f80c821a7c0",
                            Email = "mechanic1@gms.ie",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "Mechanic1",
                            NormalizedEmail = "MECHANIC1@GMS.IE",
                            NormalizedUserName = "MECHANIC1@GMS.IE",
                            PasswordHash = "AQAAAAEAACcQAAAAEHcMjaOj2SWhgsO/Zx3RzRK+h2avq9pMIVFXNRX45d5IUc0i7H6zumWkMUMCOEOv0Q==",
                            PhoneNumber = "0834564578",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ba9871ff-891a-4cca-a900-2cd579893694",
                            TwoFactorEnabled = false,
                            UserName = "mechanic1@gms.ie"
                        },
                        new
                        {
                            Id = "cab9f1df-6d5c-40ae-b05a-be0d0d379f55",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "fcd13006-3fd0-4b68-8114-170f89ffe41d",
                            Email = "mechanic2@gms.ie",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "Mechanic2",
                            NormalizedEmail = "MECHANIC2@GMS.IE",
                            NormalizedUserName = "MECHANIC2@GMS.IE",
                            PasswordHash = "AQAAAAEAACcQAAAAEDwP3gbdeZxkRJ1T2Md18PyREUsQf7NCs5TBDfnV0bz2mp5nhAh2DrBp0dnR+4PVFA==",
                            PhoneNumber = "0834564536",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "cd1f0ff6-e0a6-435b-918c-7fba8b29407e",
                            TwoFactorEnabled = false,
                            UserName = "mechanic2@gms.ie"
                        },
                        new
                        {
                            Id = "990d5d6b-e4b1-4978-accc-5065754d1632",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5d0251ec-8dae-4a53-af98-627243c6ce25",
                            Email = "mechanic3@gms.ie",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "Mechanic3",
                            NormalizedEmail = "MECHANIC3@GMS.IE",
                            NormalizedUserName = "MECHANIC3@GMS.IE",
                            PasswordHash = "AQAAAAEAACcQAAAAEJ3kClS3fSIi3jqmWF4qe74Y9GKIM1eOtDPlAQbT56zjaCGq7ohBqx9N1ySwNWLy4g==",
                            PhoneNumber = "0834564597",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "07d3cb98-de70-4edf-bfa0-aa011a1cadf4",
                            TwoFactorEnabled = false,
                            UserName = "mechanic3@gms.ie"
                        },
                        new
                        {
                            Id = "98857515-b584-464e-850c-5047904de7f7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e5999934-7acf-403f-adde-4ee85c2ab3ac",
                            Email = "mechanic4@gms.ie",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "Mechanic4",
                            NormalizedEmail = "MECHANIC4@GMS.IE",
                            NormalizedUserName = "MECHANIC4@GMS.IE",
                            PasswordHash = "AQAAAAEAACcQAAAAECr7dcXWjJXHb8buILO/TKpR28JQvwla1x2tXA4BG4XXccB+sG/3aiCafzks57IhtQ==",
                            PhoneNumber = "0834564571",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e959c3aa-726d-49c4-b9e9-49e764539285",
                            TwoFactorEnabled = false,
                            UserName = "mechanic4@gms.ie"
                        });
                });

            modelBuilder.Entity("GarageManagementSystem.Models.Booking", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("BookingType")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("MechanicId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("VehicleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("MechanicId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("GarageManagementSystem.Models.Invoice", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BookingId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Licence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vehicle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("GarageManagementSystem.Models.InvoicePart", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("InvoiceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoicePart");
                });

            modelBuilder.Entity("GarageManagementSystem.Models.InvoiceService", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("InvoiceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceService");
                });

            modelBuilder.Entity("GarageManagementSystem.Models.Part", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Group")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Part");

                    b.HasData(
                        new
                        {
                            Id = "1be4f61b-75a8-4a84-8ba8-f918ff0748c7",
                            Deleted = false,
                            Group = "Electric",
                            Name = "Alternator",
                            Value = 120.0m
                        },
                        new
                        {
                            Id = "f54d2315-b554-4ff8-bdd9-1ebfa95a47f2",
                            Deleted = false,
                            Group = "Electric",
                            Name = "Battery",
                            Value = 50.5m
                        },
                        new
                        {
                            Id = "dffcd7fa-68da-4eff-b800-4b0d166b3068",
                            Deleted = false,
                            Group = "Electric",
                            Name = "Battery Cable",
                            Value = 20.2m
                        },
                        new
                        {
                            Id = "b1e5acb5-c57d-4c3d-8d54-e2db45bc9669",
                            Deleted = false,
                            Group = "Electric",
                            Name = "Voltage regulator",
                            Value = 3.1m
                        },
                        new
                        {
                            Id = "4827e3e1-75dc-4f67-9501-555ed572b6de",
                            Deleted = false,
                            Group = "Electric",
                            Name = "Distilled Water",
                            Value = 5.4m
                        },
                        new
                        {
                            Id = "7daf2f53-28f8-4e8c-ac79-eea2b58acb6b",
                            Deleted = false,
                            Group = "Ignition",
                            Name = "Sparking cable",
                            Value = 10.95m
                        },
                        new
                        {
                            Id = "67ad0447-cd13-4027-8cc1-a643228d730f",
                            Deleted = false,
                            Group = "Ignition",
                            Name = "Ignition Coil",
                            Value = 8.45m
                        },
                        new
                        {
                            Id = "0eece3c9-7aa8-4337-9bc5-df833ad5a81a",
                            Deleted = false,
                            Group = "Ignition",
                            Name = "Ignition box",
                            Value = 130.5m
                        },
                        new
                        {
                            Id = "4ec7c8e0-c429-4232-a348-fc7df12b4f26",
                            Deleted = false,
                            Group = "Ignition",
                            Name = "Distributor",
                            Value = 10.95m
                        },
                        new
                        {
                            Id = "5556125b-246b-40e1-b729-adc5041f0049",
                            Deleted = false,
                            Group = "Lighting",
                            Name = "Fog light",
                            Value = 4.95m
                        },
                        new
                        {
                            Id = "4b319c42-169f-4808-bff9-d7a5b0a90bd1",
                            Deleted = false,
                            Group = "Lighting",
                            Name = "Headlight",
                            Value = 24.7m
                        },
                        new
                        {
                            Id = "19f5d50c-137e-4259-987c-aa8e9150bc4e",
                            Deleted = false,
                            Group = "Lighting",
                            Name = "Spotlight",
                            Value = 9.95m
                        },
                        new
                        {
                            Id = "b84141b8-b3a4-4d0d-b780-f0a7baae40eb",
                            Deleted = false,
                            Group = "Lighting",
                            Name = "Turn signal",
                            Value = 4.75m
                        },
                        new
                        {
                            Id = "c0ce3958-7471-4eb2-a1c2-15f3448f4f6e",
                            Deleted = false,
                            Group = "Lighting",
                            Name = "Brake light",
                            Value = 5.85m
                        },
                        new
                        {
                            Id = "01820d03-7830-499d-a50e-6bb8eeaabc22",
                            Deleted = false,
                            Group = "Lighting",
                            Name = "Interior light",
                            Value = 8.0m
                        },
                        new
                        {
                            Id = "ae268aaf-c02e-4fe8-9cec-48fd3873d273",
                            Deleted = false,
                            Group = "Sensor",
                            Name = "Fuel level sensor",
                            Value = 25.55m
                        },
                        new
                        {
                            Id = "ad0bd7c2-d123-4bfe-b3c8-ed6b16e1b148",
                            Deleted = false,
                            Group = "Sensor",
                            Name = "Airbag sensors",
                            Value = 20.15m
                        },
                        new
                        {
                            Id = "e26b5949-6060-4e79-b1ff-704f7bd88b20",
                            Deleted = false,
                            Group = "Sensor",
                            Name = "Oil level sensor",
                            Value = 15.0m
                        },
                        new
                        {
                            Id = "40185a87-30e8-4234-ab90-38bf43b2204c",
                            Deleted = false,
                            Group = "Sensor",
                            Name = "Oil pressure sensor",
                            Value = 30.99m
                        },
                        new
                        {
                            Id = "26989f20-8f17-49a0-8cc3-a5ff3f6522f9",
                            Deleted = false,
                            Group = "Sensor",
                            Name = "Coolant temperature sensor",
                            Value = 20.65m
                        },
                        new
                        {
                            Id = "39a62df0-ee2b-4389-88dd-4013612d0b09",
                            Deleted = false,
                            Group = "Miscellaneous",
                            Name = "Air bag control module",
                            Value = 56.79m
                        },
                        new
                        {
                            Id = "86124efb-4b4c-4ace-b553-20cfefc422db",
                            Deleted = false,
                            Group = "Miscellaneous",
                            Name = "Alarm and siren",
                            Value = 25.45m
                        },
                        new
                        {
                            Id = "8ab45b3f-ec15-4dab-be15-3144f918dc06",
                            Deleted = false,
                            Group = "Miscellaneous",
                            Name = "Central locking system",
                            Value = 40.9m
                        },
                        new
                        {
                            Id = "cf84a826-7ce4-4a8d-a319-5c0927f11c01",
                            Deleted = false,
                            Group = "Miscellaneous",
                            Name = "Fuse",
                            Value = 1.2m
                        },
                        new
                        {
                            Id = "65481cc5-5488-495c-9a56-bee704198d42",
                            Deleted = false,
                            Group = "Miscellaneous",
                            Name = "Fuse Box",
                            Value = 11.55m
                        },
                        new
                        {
                            Id = "6e4b77e5-a6f0-49c0-860c-3b22d245708e",
                            Deleted = false,
                            Group = "Miscellaneous",
                            Name = "GPS",
                            Value = 10.95m
                        },
                        new
                        {
                            Id = "b9684291-3862-4c0e-92b5-e9097c28e606",
                            Deleted = false,
                            Group = "Miscellaneous",
                            Name = "Speed controller",
                            Value = 10.95m
                        },
                        new
                        {
                            Id = "ff18faa9-ac51-45ce-8ac8-3fa5ecf453c0",
                            Deleted = false,
                            Group = "Miscellaneous",
                            Name = "Transmission computer",
                            Value = 10.95m
                        },
                        new
                        {
                            Id = "b33f6c1e-db8f-4a28-be2b-7f8e28828a22",
                            Deleted = false,
                            Group = "Miscellaneous",
                            Name = "Engine computer and management system",
                            Value = 10.95m
                        },
                        new
                        {
                            Id = "6fa41a8a-2934-42fa-bb24-de4d7c7d8191",
                            Deleted = false,
                            Group = "Braking System",
                            Name = "Anti-lock braking system (ABS) ",
                            Value = 150.45m
                        },
                        new
                        {
                            Id = "6f581107-8787-4444-9161-5c9954be1a85",
                            Deleted = false,
                            Group = "Braking System",
                            Name = "Brake disc",
                            Value = 10.0m
                        },
                        new
                        {
                            Id = "7e09bbdb-7173-408d-ae9b-e524b7c4e606",
                            Deleted = false,
                            Group = "Braking System",
                            Name = "Brake Fluid",
                            Value = 8.45m
                        },
                        new
                        {
                            Id = "4edf7346-0e2d-4d5d-b09f-0505b8d7cdd5",
                            Deleted = false,
                            Group = "Braking System",
                            Name = "Brake pedal",
                            Value = 30.95m
                        },
                        new
                        {
                            Id = "820e215b-14ff-4cc6-a300-b4ca085170c0",
                            Deleted = false,
                            Group = "Braking System",
                            Name = "Brake warning light",
                            Value = 3.5m
                        },
                        new
                        {
                            Id = "ac93417a-e08b-4f53-86cf-74aadd79f3c0",
                            Deleted = false,
                            Group = "Braking System",
                            Name = "Park brake",
                            Value = 36.45m
                        },
                        new
                        {
                            Id = "b0a38a09-643f-4d73-8c2d-0ea6f98277dc",
                            Deleted = false,
                            Group = "Braking System",
                            Name = "Tyre",
                            Value = 59.99m
                        },
                        new
                        {
                            Id = "52e768b5-2ee9-49ea-9c2a-ca58dab01042",
                            Deleted = false,
                            Group = "Braking System",
                            Name = "Brake pump",
                            Value = 24.89m
                        },
                        new
                        {
                            Id = "7dfcb764-1ffa-4bba-a14c-de4728312465",
                            Deleted = false,
                            Group = "Engine",
                            Name = "Diesel engine",
                            Value = 1647.8m
                        },
                        new
                        {
                            Id = "f83409c5-5cdd-4ece-af55-7eb44f43c00f",
                            Deleted = false,
                            Group = "Engine",
                            Name = "Cylinder head",
                            Value = 85.4m
                        },
                        new
                        {
                            Id = "28f8cdb7-9b99-4f8b-8d01-af86142fa9b5",
                            Deleted = false,
                            Group = "Engine",
                            Name = "Piston",
                            Value = 35.4m
                        },
                        new
                        {
                            Id = "f34ae121-d21e-48e1-b905-76154cab4d56",
                            Deleted = false,
                            Group = "Engine",
                            Name = "Starter motor",
                            Value = 28.6m
                        },
                        new
                        {
                            Id = "a9835046-890a-45ec-a155-5bb42d608e4b",
                            Deleted = false,
                            Group = "Engine",
                            Name = "Petrol engine (gasoline engine)",
                            Value = 789.5m
                        },
                        new
                        {
                            Id = "9f1bf2a9-f240-42c6-aada-866c0863c6b4",
                            Deleted = false,
                            Group = "Cooling",
                            Name = "Radiator",
                            Value = 55.1m
                        },
                        new
                        {
                            Id = "23f1cd34-bc61-4105-b624-909a9db2e3d4",
                            Deleted = false,
                            Group = "Cooling",
                            Name = "Cooling fan",
                            Value = 29.9m
                        },
                        new
                        {
                            Id = "0f9bcf1b-996a-4884-9a79-1880d139aa0a",
                            Deleted = false,
                            Group = "Cooling",
                            Name = "Water tank",
                            Value = 35.4m
                        },
                        new
                        {
                            Id = "6975f7e5-932f-4815-ba55-f6271dd71ac9",
                            Deleted = false,
                            Group = "Filter",
                            Name = "Oil filter",
                            Value = 15.00m
                        },
                        new
                        {
                            Id = "56a2a5bb-cefb-4069-b64c-cb96aa4510ea",
                            Deleted = false,
                            Group = "Filter",
                            Name = "Air filter",
                            Value = 11.45m
                        },
                        new
                        {
                            Id = "c0aa97da-bb9b-4cd0-a264-f473efbd281f",
                            Deleted = false,
                            Group = "Filter",
                            Name = "Fuel filter",
                            Value = 17.5m
                        });
                });

            modelBuilder.Entity("GarageManagementSystem.Models.Service", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Group")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Service");

                    b.HasData(
                        new
                        {
                            Id = "29b3cb11-a857-4596-8eb2-4909729354b5",
                            Deleted = false,
                            Group = "Main",
                            Name = "Annual Service",
                            Value = 120.0m
                        },
                        new
                        {
                            Id = "0616d08e-78d5-4ff8-abd6-dcd2c53229bd",
                            Deleted = false,
                            Group = "Main",
                            Name = "Major Service",
                            Value = 120.0m
                        },
                        new
                        {
                            Id = "e86a9c49-a7b0-4f93-99b4-d386ad0e0b8d",
                            Deleted = false,
                            Group = "Main",
                            Name = "Repair / Fault",
                            Value = 120.0m
                        },
                        new
                        {
                            Id = "2ee7195e-b47c-400d-afe5-9cd2cc71eab8",
                            Deleted = false,
                            Group = "Main",
                            Name = "Major Repair",
                            Value = 120.0m
                        });
                });

            modelBuilder.Entity("GarageManagementSystem.Models.Vehicle", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("EngineType")
                        .HasColumnType("int");

                    b.Property<string>("Licence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Make")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "e3d4f4a2-1c98-486d-bc8d-1773e3766bb4",
                            ConcurrencyStamp = "7d36eb1e-f28b-4984-b8f8-ccd44b6f11c9",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        },
                        new
                        {
                            Id = "b09f1e6f-0574-4589-9c08-44d22a208054",
                            ConcurrencyStamp = "aaeb9d55-3071-40d0-8d46-8c1b121751fb",
                            Name = "Customer",
                            NormalizedName = "CUSTOMER"
                        },
                        new
                        {
                            Id = "ef38b05c-8be4-4162-a344-1eec9d231943",
                            ConcurrencyStamp = "2d137420-c535-4fb7-9f32-801e44f4c7d4",
                            Name = "Mechanic",
                            NormalizedName = "MECHANIC"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "d42eb8c8-2232-406b-9bc0-3859863f064c",
                            RoleId = "e3d4f4a2-1c98-486d-bc8d-1773e3766bb4"
                        },
                        new
                        {
                            UserId = "160453a8-8e19-4f70-9b61-3f6f37d82a3a",
                            RoleId = "ef38b05c-8be4-4162-a344-1eec9d231943"
                        },
                        new
                        {
                            UserId = "cab9f1df-6d5c-40ae-b05a-be0d0d379f55",
                            RoleId = "ef38b05c-8be4-4162-a344-1eec9d231943"
                        },
                        new
                        {
                            UserId = "990d5d6b-e4b1-4978-accc-5065754d1632",
                            RoleId = "ef38b05c-8be4-4162-a344-1eec9d231943"
                        },
                        new
                        {
                            UserId = "98857515-b584-464e-850c-5047904de7f7",
                            RoleId = "ef38b05c-8be4-4162-a344-1eec9d231943"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("GarageManagementSystem.Models.Booking", b =>
                {
                    b.HasOne("GarageManagementSystem.Models.ApplicationUser", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GarageManagementSystem.Models.ApplicationUser", "Mechanic")
                        .WithMany()
                        .HasForeignKey("MechanicId");

                    b.HasOne("GarageManagementSystem.Models.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Mechanic");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("GarageManagementSystem.Models.Invoice", b =>
                {
                    b.HasOne("GarageManagementSystem.Models.Booking", "Booking")
                        .WithMany()
                        .HasForeignKey("BookingId");

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("GarageManagementSystem.Models.InvoicePart", b =>
                {
                    b.HasOne("GarageManagementSystem.Models.Invoice", null)
                        .WithMany("InvoiceParts")
                        .HasForeignKey("InvoiceId");
                });

            modelBuilder.Entity("GarageManagementSystem.Models.InvoiceService", b =>
                {
                    b.HasOne("GarageManagementSystem.Models.Invoice", null)
                        .WithMany("InvoiceServices")
                        .HasForeignKey("InvoiceId");
                });

            modelBuilder.Entity("GarageManagementSystem.Models.Vehicle", b =>
                {
                    b.HasOne("GarageManagementSystem.Models.ApplicationUser", null)
                        .WithMany("Vehicles")
                        .HasForeignKey("ApplicationUserId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("GarageManagementSystem.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("GarageManagementSystem.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GarageManagementSystem.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("GarageManagementSystem.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GarageManagementSystem.Models.ApplicationUser", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("GarageManagementSystem.Models.Invoice", b =>
                {
                    b.Navigation("InvoiceParts");

                    b.Navigation("InvoiceServices");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using GarageManagementSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GarageManagementSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210809204849_Created Seed Method")]
    partial class CreatedSeedMethod
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GarageManagementSystem.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "d42eb8c8-2232-406b-9bc0-3859863f064c",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bd4a7385-d8ac-4722-85e1-438d78aff2e6",
                            Email = "admin@gms.ie",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "Admin",
                            NormalizedEmail = "ADMIN@GMS.IE",
                            NormalizedUserName = "ADMIN@GMS.IE",
                            PasswordHash = "AQAAAAEAACcQAAAAEB7JkTnUZW6OABEIQUCA/W8+do2OAdsXhX6xW9pC+S5nprHmBk7gWzMJGtMm4WjgcQ==",
                            PhoneNumber = "014569145",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f0f1e22d-4a2c-42f2-802b-0fe4920abb23",
                            TwoFactorEnabled = false,
                            UserName = "admin@gms.ie"
                        },
                        new
                        {
                            Id = "160453a8-8e19-4f70-9b61-3f6f37d82a3a",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "34ca02ef-8976-4a97-9759-8de3bab153b0",
                            Email = "mechanic1@gms.ie",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "Mechanic1",
                            NormalizedEmail = "MECHANIC1@GMS.IE",
                            NormalizedUserName = "MECHANIC1@GMS.IE",
                            PasswordHash = "AQAAAAEAACcQAAAAEIAVYCJOTG1ENkOohgCmpkujWLhbjValu+q7BpYnZd+iIVVYU2sdqFoAbQjT4NB0VA==",
                            PhoneNumber = "0834564578",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2e0096b1-fa6d-481e-9628-f5e895d6381a",
                            TwoFactorEnabled = false,
                            UserName = "mechanic1@gms.ie"
                        },
                        new
                        {
                            Id = "cab9f1df-6d5c-40ae-b05a-be0d0d379f55",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0402f153-ff54-4553-a17d-3298feed7716",
                            Email = "mechanic2@gms.ie",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "Mechanic2",
                            NormalizedEmail = "MECHANIC2@GMS.IE",
                            NormalizedUserName = "MECHANIC2@GMS.IE",
                            PasswordHash = "AQAAAAEAACcQAAAAENxf3reOre2p8GDYnzoWK7WEsSzoJEJD1FNPZxo7o1VGwkye0WA6TnfjmWxubiYgHg==",
                            PhoneNumber = "0834564536",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "60ba06cd-55e2-423d-bfc3-6a897b26d13d",
                            TwoFactorEnabled = false,
                            UserName = "mechanic2@gms.ie"
                        },
                        new
                        {
                            Id = "990d5d6b-e4b1-4978-accc-5065754d1632",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6366d715-1ae3-4933-ac1a-f3413295e1f7",
                            Email = "mechanic3@gms.ie",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "Mechanic3",
                            NormalizedEmail = "MECHANIC3@GMS.IE",
                            NormalizedUserName = "MECHANIC3@GMS.IE",
                            PasswordHash = "AQAAAAEAACcQAAAAELJqkcG7s9doqfzuKhFk63xWibqK61CYG3jjeSGi6nbGmCaDvc5vP/fWHGdzTGg9kA==",
                            PhoneNumber = "0834564597",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6f6c0336-650c-4f16-a703-04fa680b2fad",
                            TwoFactorEnabled = false,
                            UserName = "mechanic3@gms.ie"
                        },
                        new
                        {
                            Id = "98857515-b584-464e-850c-5047904de7f7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c1df1f89-fb07-4fe9-893d-88f391acf375",
                            Email = "mechanic4@gms.ie",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "Mechanic4",
                            NormalizedEmail = "MECHANIC4@GMS.IE",
                            NormalizedUserName = "MECHANIC4@GMS.IE",
                            PasswordHash = "AQAAAAEAACcQAAAAEMF1QmgT10yAvj7qsGmCYLcbKxF2dZJ22lDfXJw6B+2sHxiMaCAs/h2wwBiIQrfQhQ==",
                            PhoneNumber = "0834564571",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ec43dd90-e97d-43fb-8958-0cccbd0bf671",
                            TwoFactorEnabled = false,
                            UserName = "mechanic4@gms.ie"
                        });
                });

            modelBuilder.Entity("GarageManagementSystem.Models.Booking", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("BookingType")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("MechanicId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("VehicleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("MechanicId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("GarageManagementSystem.Models.Invoice", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BookingId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Licence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vehicle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("GarageManagementSystem.Models.InvoiceService", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("InvoiceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceService");
                });

            modelBuilder.Entity("GarageManagementSystem.Models.Part", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Value")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Part");

                    b.HasData(
                        new
                        {
                            Id = "d199de08-7b08-432b-84f4-1d85718dc7ed",
                            Deleted = false,
                            Name = "Alternator",
                            Value = 120.0m
                        },
                        new
                        {
                            Id = "d59fbffa-8b49-48f1-bee4-6e8968cf9810",
                            Deleted = false,
                            Name = "Battery",
                            Value = 50.5m
                        },
                        new
                        {
                            Id = "d803a9f6-c469-4a0a-b36d-e60e25464e00",
                            Deleted = false,
                            Name = "Battery Cable",
                            Value = 20.2m
                        },
                        new
                        {
                            Id = "4afc996e-4ab7-4b2d-b8c2-4178b1c04539",
                            Deleted = false,
                            Name = "Voltage regulator",
                            Value = 3.1m
                        },
                        new
                        {
                            Id = "b5fda5a3-c4fc-4da5-9102-225e57cab14f",
                            Deleted = false,
                            Name = "Distilled Water",
                            Value = 5.4m
                        },
                        new
                        {
                            Id = "517c357e-59c7-44c7-ae99-d2ead2b08768",
                            Deleted = false,
                            Name = "Sparking cable",
                            Value = 10.95m
                        },
                        new
                        {
                            Id = "e2500bb3-1543-4f84-941b-4a24cb5fa07b",
                            Deleted = false,
                            Name = "Ignition Coil",
                            Value = 8.45m
                        },
                        new
                        {
                            Id = "dbcff1e4-2c9f-4885-98a7-c10e1020ad80",
                            Deleted = false,
                            Name = "Ignition box",
                            Value = 130.5m
                        },
                        new
                        {
                            Id = "dadb742b-a3cc-40d8-b96e-42797aa7c60d",
                            Deleted = false,
                            Name = "Distributor",
                            Value = 10.95m
                        },
                        new
                        {
                            Id = "cfa5c005-174b-47a3-aa25-0b3ce054fdd7",
                            Deleted = false,
                            Name = "Fog light",
                            Value = 4.95m
                        },
                        new
                        {
                            Id = "7e7c357a-e31c-45dd-9310-8a89ffd10164",
                            Deleted = false,
                            Name = "Headlight",
                            Value = 24.7m
                        },
                        new
                        {
                            Id = "4d82a050-aa8b-4c52-a42a-b3c180fbe046",
                            Deleted = false,
                            Name = "Spotlight",
                            Value = 9.95m
                        },
                        new
                        {
                            Id = "23e20b65-250f-4c0e-bdfc-cbc35e4fa747",
                            Deleted = false,
                            Name = "Turn signal",
                            Value = 4.75m
                        },
                        new
                        {
                            Id = "e2086eb8-1db9-4539-92e0-73ce1b128960",
                            Deleted = false,
                            Name = "Brake light",
                            Value = 5.85m
                        },
                        new
                        {
                            Id = "db8f0317-c21d-4d12-8855-796945e4a315",
                            Deleted = false,
                            Name = "Interior light",
                            Value = 8.0m
                        },
                        new
                        {
                            Id = "f51474f5-0623-4e17-8470-bea39cde0383",
                            Deleted = false,
                            Name = "Fuel level sensor",
                            Value = 25.55m
                        },
                        new
                        {
                            Id = "c951c665-e6ad-45a5-b114-1b1213f9d8ae",
                            Deleted = false,
                            Name = "Airbag sensors",
                            Value = 20.15m
                        },
                        new
                        {
                            Id = "d50f953e-0348-4f9c-adf9-5e5b9cfecb51",
                            Deleted = false,
                            Name = "Oil level sensor",
                            Value = 15.0m
                        },
                        new
                        {
                            Id = "face813d-a3d1-4e08-b06a-1327e3925b68",
                            Deleted = false,
                            Name = "Oil pressure sensor",
                            Value = 30.99m
                        },
                        new
                        {
                            Id = "d8a3c5a1-c55d-413c-92ea-4d98a60269a7",
                            Deleted = false,
                            Name = "Coolant temperature sensor",
                            Value = 20.65m
                        },
                        new
                        {
                            Id = "dc7ca7a1-39b5-416e-b0f2-c9b3e7097163",
                            Deleted = false,
                            Name = "Air bag control module",
                            Value = 56.79m
                        },
                        new
                        {
                            Id = "7ed1a73b-89ac-487c-8768-12b9fe3bac87",
                            Deleted = false,
                            Name = "Alarm and siren",
                            Value = 25.45m
                        },
                        new
                        {
                            Id = "2ecb4682-0e0e-4749-ab93-c293149a829e",
                            Deleted = false,
                            Name = "Central locking system",
                            Value = 40.9m
                        },
                        new
                        {
                            Id = "760f8dde-a5d6-45cb-a123-387a39b85163",
                            Deleted = false,
                            Name = "Fuse",
                            Value = 1.2m
                        },
                        new
                        {
                            Id = "43df42f1-23c6-4c94-8da4-bb88d1427638",
                            Deleted = false,
                            Name = "Fuse Box",
                            Value = 11.55m
                        },
                        new
                        {
                            Id = "4eeb90c6-b518-4757-b9c9-c9d7c4e4aa36",
                            Deleted = false,
                            Name = "GPS",
                            Value = 10.95m
                        },
                        new
                        {
                            Id = "e95bef12-794c-4c22-914e-459f0f33a77b",
                            Deleted = false,
                            Name = "Speed controller",
                            Value = 10.95m
                        },
                        new
                        {
                            Id = "4cfae684-c4a5-4766-841b-4643819395f6",
                            Deleted = false,
                            Name = "Transmission computer",
                            Value = 10.95m
                        },
                        new
                        {
                            Id = "f7c03548-7bf2-4c98-ba24-a839bbbeb7cf",
                            Deleted = false,
                            Name = "Engine computer and management system",
                            Value = 10.95m
                        },
                        new
                        {
                            Id = "63223b7a-74b9-4f69-a9fc-031a82547cc3",
                            Deleted = false,
                            Name = "Anti-lock braking system (ABS) ",
                            Value = 150.45m
                        },
                        new
                        {
                            Id = "36daa0af-e00b-4a42-813c-aac98d607219",
                            Deleted = false,
                            Name = "Brake disc",
                            Value = 10.0m
                        },
                        new
                        {
                            Id = "64521dd2-8817-4c5f-b20b-7ab8130faae9",
                            Deleted = false,
                            Name = "Brake Fluid",
                            Value = 8.45m
                        },
                        new
                        {
                            Id = "6a8ed31e-ee9f-4e81-8370-89d670697de1",
                            Deleted = false,
                            Name = "Brake pedal",
                            Value = 30.95m
                        },
                        new
                        {
                            Id = "63e0e9bb-717b-4e49-918e-f7eaf5e7c75a",
                            Deleted = false,
                            Name = "Brake warning light",
                            Value = 3.5m
                        },
                        new
                        {
                            Id = "eae82f89-3a8c-429a-9ba4-42f81a666ab4",
                            Deleted = false,
                            Name = "Park brake",
                            Value = 36.45m
                        },
                        new
                        {
                            Id = "65e5ff07-6d67-4cb9-b87d-b7f1017652b3",
                            Deleted = false,
                            Name = "Tyre",
                            Value = 59.99m
                        },
                        new
                        {
                            Id = "9f4d5572-4fe8-4bd0-b086-0a4df026bdcd",
                            Deleted = false,
                            Name = "Brake pump",
                            Value = 24.89m
                        },
                        new
                        {
                            Id = "2eea4671-d991-49a4-ae66-13d396eb78fd",
                            Deleted = false,
                            Name = "Diesel engine",
                            Value = 1647.8m
                        },
                        new
                        {
                            Id = "027fa5e1-68a2-43d7-a445-12da317c7e9d",
                            Deleted = false,
                            Name = "Cylinder head",
                            Value = 85.4m
                        },
                        new
                        {
                            Id = "5adc96fe-4568-414b-8c98-83924ea78eb9",
                            Deleted = false,
                            Name = "Piston",
                            Value = 35.4m
                        },
                        new
                        {
                            Id = "67c80d6e-141c-4ee7-b36e-3e27aa7dd9fb",
                            Deleted = false,
                            Name = "Starter motor",
                            Value = 28.6m
                        },
                        new
                        {
                            Id = "2e76f63e-8786-4034-9c16-e98ce903aa98",
                            Deleted = false,
                            Name = "Petrol engine (gasoline engine)",
                            Value = 789.5m
                        },
                        new
                        {
                            Id = "52c88e02-484c-4dec-8cbb-03f3a3c8ab56",
                            Deleted = false,
                            Name = "Radiator",
                            Value = 55.1m
                        },
                        new
                        {
                            Id = "04b5a1ab-db00-4bbe-ad9c-04e2cc661191",
                            Deleted = false,
                            Name = "Cooling fan",
                            Value = 29.9m
                        },
                        new
                        {
                            Id = "c3281d4e-7cce-408d-9a0d-118b369188b4",
                            Deleted = false,
                            Name = "Water tank",
                            Value = 35.4m
                        },
                        new
                        {
                            Id = "be253e6b-9d63-46b3-8f4f-8bffe3be7dc0",
                            Deleted = false,
                            Name = "Oil filter",
                            Value = 15.00m
                        },
                        new
                        {
                            Id = "2dff259a-feb5-4f55-a6d5-c040ba023ab2",
                            Deleted = false,
                            Name = "Air filter",
                            Value = 11.45m
                        },
                        new
                        {
                            Id = "4af3bd25-a754-4368-a1da-d4bf5a32fe04",
                            Deleted = false,
                            Name = "Fuel filter",
                            Value = 17.5m
                        });
                });

            modelBuilder.Entity("GarageManagementSystem.Models.Service", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Value")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Service");

                    b.HasData(
                        new
                        {
                            Id = "b29cf05f-6240-435b-bdfb-36274c9d5313",
                            Deleted = false,
                            Name = "Annual Service",
                            Value = 120.0m
                        },
                        new
                        {
                            Id = "0f4ba19f-4d9e-4bf9-b1c6-8502e03e12c8",
                            Deleted = false,
                            Name = "Major Service",
                            Value = 120.0m
                        },
                        new
                        {
                            Id = "cae07386-9e7b-4e02-8d37-254d110f6ca8",
                            Deleted = false,
                            Name = "Repair / Fault",
                            Value = 120.0m
                        },
                        new
                        {
                            Id = "d47ebc86-da03-41b1-ad09-9d2c6bdf582e",
                            Deleted = false,
                            Name = "Major Repair",
                            Value = 120.0m
                        });
                });

            modelBuilder.Entity("GarageManagementSystem.Models.Vehicle", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("EngineType")
                        .HasColumnType("int");

                    b.Property<string>("Licence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Make")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "e3d4f4a2-1c98-486d-bc8d-1773e3766bb4",
                            ConcurrencyStamp = "7d36eb1e-f28b-4984-b8f8-ccd44b6f11c9",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        },
                        new
                        {
                            Id = "b09f1e6f-0574-4589-9c08-44d22a208054",
                            ConcurrencyStamp = "aaeb9d55-3071-40d0-8d46-8c1b121751fb",
                            Name = "Customer",
                            NormalizedName = "CUSTOMER"
                        },
                        new
                        {
                            Id = "ef38b05c-8be4-4162-a344-1eec9d231943",
                            ConcurrencyStamp = "2d137420-c535-4fb7-9f32-801e44f4c7d4",
                            Name = "Mechanic",
                            NormalizedName = "MECHANIC"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "d42eb8c8-2232-406b-9bc0-3859863f064c",
                            RoleId = "e3d4f4a2-1c98-486d-bc8d-1773e3766bb4"
                        },
                        new
                        {
                            UserId = "160453a8-8e19-4f70-9b61-3f6f37d82a3a",
                            RoleId = "ef38b05c-8be4-4162-a344-1eec9d231943"
                        },
                        new
                        {
                            UserId = "cab9f1df-6d5c-40ae-b05a-be0d0d379f55",
                            RoleId = "ef38b05c-8be4-4162-a344-1eec9d231943"
                        },
                        new
                        {
                            UserId = "990d5d6b-e4b1-4978-accc-5065754d1632",
                            RoleId = "ef38b05c-8be4-4162-a344-1eec9d231943"
                        },
                        new
                        {
                            UserId = "98857515-b584-464e-850c-5047904de7f7",
                            RoleId = "ef38b05c-8be4-4162-a344-1eec9d231943"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("GarageManagementSystem.Models.Booking", b =>
                {
                    b.HasOne("GarageManagementSystem.Models.ApplicationUser", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GarageManagementSystem.Models.ApplicationUser", "Mechanic")
                        .WithMany()
                        .HasForeignKey("MechanicId");

                    b.HasOne("GarageManagementSystem.Models.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Mechanic");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("GarageManagementSystem.Models.Invoice", b =>
                {
                    b.HasOne("GarageManagementSystem.Models.Booking", "Booking")
                        .WithMany()
                        .HasForeignKey("BookingId");

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("GarageManagementSystem.Models.InvoiceService", b =>
                {
                    b.HasOne("GarageManagementSystem.Models.Invoice", null)
                        .WithMany("InvoiceServices")
                        .HasForeignKey("InvoiceId");
                });

            modelBuilder.Entity("GarageManagementSystem.Models.Vehicle", b =>
                {
                    b.HasOne("GarageManagementSystem.Models.ApplicationUser", null)
                        .WithMany("Vehicles")
                        .HasForeignKey("ApplicationUserId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("GarageManagementSystem.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("GarageManagementSystem.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GarageManagementSystem.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("GarageManagementSystem.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GarageManagementSystem.Models.ApplicationUser", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("GarageManagementSystem.Models.Invoice", b =>
                {
                    b.Navigation("InvoiceServices");
                });
#pragma warning restore 612, 618
        }
    }
}
